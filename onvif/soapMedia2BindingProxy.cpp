/* soapMedia2BindingProxy.cpp
   Generated by gSOAP 2.8.122 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingProxy.h"

Media2BindingProxy::Media2BindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingProxy::Media2BindingProxy(const Media2BindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

Media2BindingProxy::Media2BindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingProxy_init(_soap->imode, _soap->omode);
}

Media2BindingProxy::Media2BindingProxy(struct soap *_soap, const char *soap_endpoint_url)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingProxy_init(_soap->imode, _soap->omode);
	soap_endpoint = soap_endpoint_url;
}

Media2BindingProxy::Media2BindingProxy(const char *soap_endpoint_url)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = soap_endpoint_url;
}

Media2BindingProxy::Media2BindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
}

Media2BindingProxy::Media2BindingProxy(const char *soap_endpoint_url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
	soap_endpoint = soap_endpoint_url;
}

Media2BindingProxy::Media2BindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(imode, omode);
}

Media2BindingProxy::~Media2BindingProxy()
{	if (this->soap_own)
	{	Media2BindingProxy::destroy();
		soap_free(this->soap);
	}
}

void Media2BindingProxy::Media2BindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", "http://www.w3.org/2005/08/addressing", NULL },
        { "wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL },
        { "chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL },
        { "wsdd10", "http://tempuri.org/wsdd10.xsd", NULL, NULL },
        { "wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL },
        { "xmime", "http://tempuri.org/xmime.xsd", NULL, NULL },
        { "xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL },
        { "tt", "http://www.onvif.org/ver10/schema", NULL, NULL },
        { "wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL },
        { "wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL },
        { "wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL },
        { "tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL },
        { "tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL },
        { "tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL },
        { "wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL },
        { "timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL },
        { "tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL },
        { "tr2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL },
        { "trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

Media2BindingProxy *Media2BindingProxy::copy()
{	Media2BindingProxy *dup = SOAP_NEW_UNMANAGED(Media2BindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

Media2BindingProxy& Media2BindingProxy::operator=(const Media2BindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void Media2BindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void Media2BindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void Media2BindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void Media2BindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{
	::soap_header(this->soap);
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

::SOAP_ENV__Header *Media2BindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *Media2BindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *Media2BindingProxy::soap_fault_subcode()
{	return ::soap_fault_subcode(this->soap);
}

const char *Media2BindingProxy::soap_fault_string()
{	return ::soap_fault_string(this->soap);
}

const char *Media2BindingProxy::soap_fault_detail()
{	return ::soap_fault_detail(this->soap);
}

int Media2BindingProxy::soap_close_socket()
{	return ::soap_closesock(this->soap);
}

int Media2BindingProxy::soap_force_close_socket()
{	return ::soap_force_closesock(this->soap);
}

void Media2BindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *Media2BindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int Media2BindingProxy::send_GetServiceCapabilities(const char *soap_endpoint_url, const char *soap_action, _tr2__GetServiceCapabilities *tr2__GetServiceCapabilities)
{
	struct __tr2__GetServiceCapabilities soap_tmp___tr2__GetServiceCapabilities;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities";
	soap_tmp___tr2__GetServiceCapabilities.tr2__GetServiceCapabilities = tr2__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetServiceCapabilities(soap, &soap_tmp___tr2__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetServiceCapabilities(soap, &soap_tmp___tr2__GetServiceCapabilities, "-tr2:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetServiceCapabilities(soap, &soap_tmp___tr2__GetServiceCapabilities, "-tr2:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetServiceCapabilities(_tr2__GetServiceCapabilitiesResponse &tr2__GetServiceCapabilitiesResponse)
{
	tr2__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetServiceCapabilitiesResponse.soap_get(soap, "tr2:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_CreateProfile(const char *soap_endpoint_url, const char *soap_action, _tr2__CreateProfile *tr2__CreateProfile)
{
	struct __tr2__CreateProfile soap_tmp___tr2__CreateProfile;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateProfile";
	soap_tmp___tr2__CreateProfile.tr2__CreateProfile = tr2__CreateProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__CreateProfile(soap, &soap_tmp___tr2__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__CreateProfile(soap, &soap_tmp___tr2__CreateProfile, "-tr2:CreateProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__CreateProfile(soap, &soap_tmp___tr2__CreateProfile, "-tr2:CreateProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_CreateProfile(_tr2__CreateProfileResponse &tr2__CreateProfileResponse)
{
	tr2__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__CreateProfileResponse.soap_get(soap, "tr2:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetProfiles(const char *soap_endpoint_url, const char *soap_action, _tr2__GetProfiles *tr2__GetProfiles)
{
	struct __tr2__GetProfiles soap_tmp___tr2__GetProfiles;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetProfiles";
	soap_tmp___tr2__GetProfiles.tr2__GetProfiles = tr2__GetProfiles;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetProfiles(soap, &soap_tmp___tr2__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetProfiles(soap, &soap_tmp___tr2__GetProfiles, "-tr2:GetProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetProfiles(soap, &soap_tmp___tr2__GetProfiles, "-tr2:GetProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetProfiles(_tr2__GetProfilesResponse &tr2__GetProfilesResponse)
{
	tr2__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetProfilesResponse.soap_get(soap, "tr2:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_AddConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__AddConfiguration *tr2__AddConfiguration)
{
	struct __tr2__AddConfiguration soap_tmp___tr2__AddConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/AddConfiguration";
	soap_tmp___tr2__AddConfiguration.tr2__AddConfiguration = tr2__AddConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__AddConfiguration(soap, &soap_tmp___tr2__AddConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__AddConfiguration(soap, &soap_tmp___tr2__AddConfiguration, "-tr2:AddConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__AddConfiguration(soap, &soap_tmp___tr2__AddConfiguration, "-tr2:AddConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_AddConfiguration(_tr2__AddConfigurationResponse &tr2__AddConfigurationResponse)
{
	tr2__AddConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__AddConfigurationResponse.soap_get(soap, "tr2:AddConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_RemoveConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__RemoveConfiguration *tr2__RemoveConfiguration)
{
	struct __tr2__RemoveConfiguration soap_tmp___tr2__RemoveConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration";
	soap_tmp___tr2__RemoveConfiguration.tr2__RemoveConfiguration = tr2__RemoveConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__RemoveConfiguration(soap, &soap_tmp___tr2__RemoveConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__RemoveConfiguration(soap, &soap_tmp___tr2__RemoveConfiguration, "-tr2:RemoveConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__RemoveConfiguration(soap, &soap_tmp___tr2__RemoveConfiguration, "-tr2:RemoveConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_RemoveConfiguration(_tr2__RemoveConfigurationResponse &tr2__RemoveConfigurationResponse)
{
	tr2__RemoveConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__RemoveConfigurationResponse.soap_get(soap, "tr2:RemoveConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_DeleteProfile(const char *soap_endpoint_url, const char *soap_action, _tr2__DeleteProfile *tr2__DeleteProfile)
{
	struct __tr2__DeleteProfile soap_tmp___tr2__DeleteProfile;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteProfile";
	soap_tmp___tr2__DeleteProfile.tr2__DeleteProfile = tr2__DeleteProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__DeleteProfile(soap, &soap_tmp___tr2__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__DeleteProfile(soap, &soap_tmp___tr2__DeleteProfile, "-tr2:DeleteProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__DeleteProfile(soap, &soap_tmp___tr2__DeleteProfile, "-tr2:DeleteProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_DeleteProfile(_tr2__DeleteProfileResponse &tr2__DeleteProfileResponse)
{
	tr2__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__DeleteProfileResponse.soap_get(soap, "tr2:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoSourceConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetVideoSourceConfigurations)
{
	struct __tr2__GetVideoSourceConfigurations soap_tmp___tr2__GetVideoSourceConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations";
	soap_tmp___tr2__GetVideoSourceConfigurations.tr2__GetVideoSourceConfigurations = tr2__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetVideoSourceConfigurations(soap, &soap_tmp___tr2__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetVideoSourceConfigurations(soap, &soap_tmp___tr2__GetVideoSourceConfigurations, "-tr2:GetVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetVideoSourceConfigurations(soap, &soap_tmp___tr2__GetVideoSourceConfigurations, "-tr2:GetVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoSourceConfigurations(_tr2__GetVideoSourceConfigurationsResponse &tr2__GetVideoSourceConfigurationsResponse)
{
	tr2__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetVideoSourceConfigurationsResponse.soap_get(soap, "tr2:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoEncoderConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetVideoEncoderConfigurations)
{
	struct __tr2__GetVideoEncoderConfigurations soap_tmp___tr2__GetVideoEncoderConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations";
	soap_tmp___tr2__GetVideoEncoderConfigurations.tr2__GetVideoEncoderConfigurations = tr2__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetVideoEncoderConfigurations(soap, &soap_tmp___tr2__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetVideoEncoderConfigurations(soap, &soap_tmp___tr2__GetVideoEncoderConfigurations, "-tr2:GetVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetVideoEncoderConfigurations(soap, &soap_tmp___tr2__GetVideoEncoderConfigurations, "-tr2:GetVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoEncoderConfigurations(_tr2__GetVideoEncoderConfigurationsResponse &tr2__GetVideoEncoderConfigurationsResponse)
{
	tr2__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetVideoEncoderConfigurationsResponse.soap_get(soap, "tr2:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioSourceConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioSourceConfigurations)
{
	struct __tr2__GetAudioSourceConfigurations soap_tmp___tr2__GetAudioSourceConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/";
	soap_tmp___tr2__GetAudioSourceConfigurations.tr2__GetAudioSourceConfigurations = tr2__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioSourceConfigurations(soap, &soap_tmp___tr2__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioSourceConfigurations(soap, &soap_tmp___tr2__GetAudioSourceConfigurations, "-tr2:GetAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioSourceConfigurations(soap, &soap_tmp___tr2__GetAudioSourceConfigurations, "-tr2:GetAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioSourceConfigurations(_tr2__GetAudioSourceConfigurationsResponse &tr2__GetAudioSourceConfigurationsResponse)
{
	tr2__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioSourceConfigurationsResponse.soap_get(soap, "tr2:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioEncoderConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioEncoderConfigurations)
{
	struct __tr2__GetAudioEncoderConfigurations soap_tmp___tr2__GetAudioEncoderConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations";
	soap_tmp___tr2__GetAudioEncoderConfigurations.tr2__GetAudioEncoderConfigurations = tr2__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioEncoderConfigurations(soap, &soap_tmp___tr2__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioEncoderConfigurations(soap, &soap_tmp___tr2__GetAudioEncoderConfigurations, "-tr2:GetAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioEncoderConfigurations(soap, &soap_tmp___tr2__GetAudioEncoderConfigurations, "-tr2:GetAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioEncoderConfigurations(_tr2__GetAudioEncoderConfigurationsResponse &tr2__GetAudioEncoderConfigurationsResponse)
{
	tr2__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioEncoderConfigurationsResponse.soap_get(soap, "tr2:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAnalyticsConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAnalyticsConfigurations)
{
	struct __tr2__GetAnalyticsConfigurations soap_tmp___tr2__GetAnalyticsConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations";
	soap_tmp___tr2__GetAnalyticsConfigurations.tr2__GetAnalyticsConfigurations = tr2__GetAnalyticsConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAnalyticsConfigurations(soap, &soap_tmp___tr2__GetAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAnalyticsConfigurations(soap, &soap_tmp___tr2__GetAnalyticsConfigurations, "-tr2:GetAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAnalyticsConfigurations(soap, &soap_tmp___tr2__GetAnalyticsConfigurations, "-tr2:GetAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAnalyticsConfigurations(_tr2__GetAnalyticsConfigurationsResponse &tr2__GetAnalyticsConfigurationsResponse)
{
	tr2__GetAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAnalyticsConfigurationsResponse.soap_get(soap, "tr2:GetAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMetadataConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetMetadataConfigurations)
{
	struct __tr2__GetMetadataConfigurations soap_tmp___tr2__GetMetadataConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations";
	soap_tmp___tr2__GetMetadataConfigurations.tr2__GetMetadataConfigurations = tr2__GetMetadataConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetMetadataConfigurations(soap, &soap_tmp___tr2__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetMetadataConfigurations(soap, &soap_tmp___tr2__GetMetadataConfigurations, "-tr2:GetMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetMetadataConfigurations(soap, &soap_tmp___tr2__GetMetadataConfigurations, "-tr2:GetMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMetadataConfigurations(_tr2__GetMetadataConfigurationsResponse &tr2__GetMetadataConfigurationsResponse)
{
	tr2__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetMetadataConfigurationsResponse.soap_get(soap, "tr2:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioOutputConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioOutputConfigurations)
{
	struct __tr2__GetAudioOutputConfigurations soap_tmp___tr2__GetAudioOutputConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations";
	soap_tmp___tr2__GetAudioOutputConfigurations.tr2__GetAudioOutputConfigurations = tr2__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioOutputConfigurations(soap, &soap_tmp___tr2__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioOutputConfigurations(soap, &soap_tmp___tr2__GetAudioOutputConfigurations, "-tr2:GetAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioOutputConfigurations(soap, &soap_tmp___tr2__GetAudioOutputConfigurations, "-tr2:GetAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioOutputConfigurations(_tr2__GetAudioOutputConfigurationsResponse &tr2__GetAudioOutputConfigurationsResponse)
{
	tr2__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioOutputConfigurationsResponse.soap_get(soap, "tr2:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioDecoderConfigurations(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioDecoderConfigurations)
{
	struct __tr2__GetAudioDecoderConfigurations soap_tmp___tr2__GetAudioDecoderConfigurations;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations";
	soap_tmp___tr2__GetAudioDecoderConfigurations.tr2__GetAudioDecoderConfigurations = tr2__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioDecoderConfigurations(soap, &soap_tmp___tr2__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioDecoderConfigurations(soap, &soap_tmp___tr2__GetAudioDecoderConfigurations, "-tr2:GetAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioDecoderConfigurations(soap, &soap_tmp___tr2__GetAudioDecoderConfigurations, "-tr2:GetAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioDecoderConfigurations(_tr2__GetAudioDecoderConfigurationsResponse &tr2__GetAudioDecoderConfigurationsResponse)
{
	tr2__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioDecoderConfigurationsResponse.soap_get(soap, "tr2:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetVideoSourceConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__SetVideoSourceConfiguration *tr2__SetVideoSourceConfiguration)
{
	struct __tr2__SetVideoSourceConfiguration soap_tmp___tr2__SetVideoSourceConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration";
	soap_tmp___tr2__SetVideoSourceConfiguration.tr2__SetVideoSourceConfiguration = tr2__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetVideoSourceConfiguration(soap, &soap_tmp___tr2__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetVideoSourceConfiguration(soap, &soap_tmp___tr2__SetVideoSourceConfiguration, "-tr2:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetVideoSourceConfiguration(soap, &soap_tmp___tr2__SetVideoSourceConfiguration, "-tr2:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetVideoSourceConfiguration(tr2__SetConfigurationResponse &tr2__SetVideoSourceConfigurationResponse)
{
	struct __tr2__SetVideoSourceConfigurationResponse *soap_tmp___tr2__SetVideoSourceConfigurationResponse;
	tr2__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetVideoSourceConfigurationResponse = soap_get___tr2__SetVideoSourceConfigurationResponse(soap, NULL, "-tr2:SetVideoSourceConfigurationResponse", NULL);
	if (!soap_tmp___tr2__SetVideoSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetVideoSourceConfigurationResponse = soap_tmp___tr2__SetVideoSourceConfigurationResponse->tr2__SetVideoSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetVideoEncoderConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__SetVideoEncoderConfiguration *tr2__SetVideoEncoderConfiguration)
{
	struct __tr2__SetVideoEncoderConfiguration soap_tmp___tr2__SetVideoEncoderConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration";
	soap_tmp___tr2__SetVideoEncoderConfiguration.tr2__SetVideoEncoderConfiguration = tr2__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetVideoEncoderConfiguration(soap, &soap_tmp___tr2__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetVideoEncoderConfiguration(soap, &soap_tmp___tr2__SetVideoEncoderConfiguration, "-tr2:SetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetVideoEncoderConfiguration(soap, &soap_tmp___tr2__SetVideoEncoderConfiguration, "-tr2:SetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetVideoEncoderConfiguration(tr2__SetConfigurationResponse &tr2__SetVideoEncoderConfigurationResponse)
{
	struct __tr2__SetVideoEncoderConfigurationResponse *soap_tmp___tr2__SetVideoEncoderConfigurationResponse;
	tr2__SetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetVideoEncoderConfigurationResponse = soap_get___tr2__SetVideoEncoderConfigurationResponse(soap, NULL, "-tr2:SetVideoEncoderConfigurationResponse", NULL);
	if (!soap_tmp___tr2__SetVideoEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetVideoEncoderConfigurationResponse = soap_tmp___tr2__SetVideoEncoderConfigurationResponse->tr2__SetVideoEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioSourceConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__SetAudioSourceConfiguration *tr2__SetAudioSourceConfiguration)
{
	struct __tr2__SetAudioSourceConfiguration soap_tmp___tr2__SetAudioSourceConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration";
	soap_tmp___tr2__SetAudioSourceConfiguration.tr2__SetAudioSourceConfiguration = tr2__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioSourceConfiguration(soap, &soap_tmp___tr2__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioSourceConfiguration(soap, &soap_tmp___tr2__SetAudioSourceConfiguration, "-tr2:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioSourceConfiguration(soap, &soap_tmp___tr2__SetAudioSourceConfiguration, "-tr2:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioSourceConfiguration(tr2__SetConfigurationResponse &tr2__SetAudioSourceConfigurationResponse)
{
	struct __tr2__SetAudioSourceConfigurationResponse *soap_tmp___tr2__SetAudioSourceConfigurationResponse;
	tr2__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetAudioSourceConfigurationResponse = soap_get___tr2__SetAudioSourceConfigurationResponse(soap, NULL, "-tr2:SetAudioSourceConfigurationResponse", NULL);
	if (!soap_tmp___tr2__SetAudioSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetAudioSourceConfigurationResponse = soap_tmp___tr2__SetAudioSourceConfigurationResponse->tr2__SetAudioSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioEncoderConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__SetAudioEncoderConfiguration *tr2__SetAudioEncoderConfiguration)
{
	struct __tr2__SetAudioEncoderConfiguration soap_tmp___tr2__SetAudioEncoderConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration";
	soap_tmp___tr2__SetAudioEncoderConfiguration.tr2__SetAudioEncoderConfiguration = tr2__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioEncoderConfiguration(soap, &soap_tmp___tr2__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioEncoderConfiguration(soap, &soap_tmp___tr2__SetAudioEncoderConfiguration, "-tr2:SetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioEncoderConfiguration(soap, &soap_tmp___tr2__SetAudioEncoderConfiguration, "-tr2:SetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioEncoderConfiguration(tr2__SetConfigurationResponse &tr2__SetAudioEncoderConfigurationResponse)
{
	struct __tr2__SetAudioEncoderConfigurationResponse *soap_tmp___tr2__SetAudioEncoderConfigurationResponse;
	tr2__SetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetAudioEncoderConfigurationResponse = soap_get___tr2__SetAudioEncoderConfigurationResponse(soap, NULL, "-tr2:SetAudioEncoderConfigurationResponse", NULL);
	if (!soap_tmp___tr2__SetAudioEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetAudioEncoderConfigurationResponse = soap_tmp___tr2__SetAudioEncoderConfigurationResponse->tr2__SetAudioEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetMetadataConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__SetMetadataConfiguration *tr2__SetMetadataConfiguration)
{
	struct __tr2__SetMetadataConfiguration soap_tmp___tr2__SetMetadataConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration";
	soap_tmp___tr2__SetMetadataConfiguration.tr2__SetMetadataConfiguration = tr2__SetMetadataConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetMetadataConfiguration(soap, &soap_tmp___tr2__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetMetadataConfiguration(soap, &soap_tmp___tr2__SetMetadataConfiguration, "-tr2:SetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetMetadataConfiguration(soap, &soap_tmp___tr2__SetMetadataConfiguration, "-tr2:SetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetMetadataConfiguration(tr2__SetConfigurationResponse &tr2__SetMetadataConfigurationResponse)
{
	struct __tr2__SetMetadataConfigurationResponse *soap_tmp___tr2__SetMetadataConfigurationResponse;
	tr2__SetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetMetadataConfigurationResponse = soap_get___tr2__SetMetadataConfigurationResponse(soap, NULL, "-tr2:SetMetadataConfigurationResponse", NULL);
	if (!soap_tmp___tr2__SetMetadataConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetMetadataConfigurationResponse = soap_tmp___tr2__SetMetadataConfigurationResponse->tr2__SetMetadataConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioOutputConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__SetAudioOutputConfiguration *tr2__SetAudioOutputConfiguration)
{
	struct __tr2__SetAudioOutputConfiguration soap_tmp___tr2__SetAudioOutputConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration";
	soap_tmp___tr2__SetAudioOutputConfiguration.tr2__SetAudioOutputConfiguration = tr2__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioOutputConfiguration(soap, &soap_tmp___tr2__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioOutputConfiguration(soap, &soap_tmp___tr2__SetAudioOutputConfiguration, "-tr2:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioOutputConfiguration(soap, &soap_tmp___tr2__SetAudioOutputConfiguration, "-tr2:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioOutputConfiguration(tr2__SetConfigurationResponse &tr2__SetAudioOutputConfigurationResponse)
{
	struct __tr2__SetAudioOutputConfigurationResponse *soap_tmp___tr2__SetAudioOutputConfigurationResponse;
	tr2__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetAudioOutputConfigurationResponse = soap_get___tr2__SetAudioOutputConfigurationResponse(soap, NULL, "-tr2:SetAudioOutputConfigurationResponse", NULL);
	if (!soap_tmp___tr2__SetAudioOutputConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetAudioOutputConfigurationResponse = soap_tmp___tr2__SetAudioOutputConfigurationResponse->tr2__SetAudioOutputConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetAudioDecoderConfiguration(const char *soap_endpoint_url, const char *soap_action, _tr2__SetAudioDecoderConfiguration *tr2__SetAudioDecoderConfiguration)
{
	struct __tr2__SetAudioDecoderConfiguration soap_tmp___tr2__SetAudioDecoderConfiguration;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration";
	soap_tmp___tr2__SetAudioDecoderConfiguration.tr2__SetAudioDecoderConfiguration = tr2__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioDecoderConfiguration(soap, &soap_tmp___tr2__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioDecoderConfiguration(soap, &soap_tmp___tr2__SetAudioDecoderConfiguration, "-tr2:SetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioDecoderConfiguration(soap, &soap_tmp___tr2__SetAudioDecoderConfiguration, "-tr2:SetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetAudioDecoderConfiguration(tr2__SetConfigurationResponse &tr2__SetAudioDecoderConfigurationResponse)
{
	struct __tr2__SetAudioDecoderConfigurationResponse *soap_tmp___tr2__SetAudioDecoderConfigurationResponse;
	tr2__SetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetAudioDecoderConfigurationResponse = soap_get___tr2__SetAudioDecoderConfigurationResponse(soap, NULL, "-tr2:SetAudioDecoderConfigurationResponse", NULL);
	if (!soap_tmp___tr2__SetAudioDecoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetAudioDecoderConfigurationResponse = soap_tmp___tr2__SetAudioDecoderConfigurationResponse->tr2__SetAudioDecoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoSourceConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetVideoSourceConfigurationOptions)
{
	struct __tr2__GetVideoSourceConfigurationOptions soap_tmp___tr2__GetVideoSourceConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/";
	soap_tmp___tr2__GetVideoSourceConfigurationOptions.tr2__GetVideoSourceConfigurationOptions = tr2__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tr2__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tr2__GetVideoSourceConfigurationOptions, "-tr2:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tr2__GetVideoSourceConfigurationOptions, "-tr2:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoSourceConfigurationOptions(_tr2__GetVideoSourceConfigurationOptionsResponse &tr2__GetVideoSourceConfigurationOptionsResponse)
{
	tr2__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "tr2:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoEncoderConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetVideoEncoderConfigurationOptions)
{
	struct __tr2__GetVideoEncoderConfigurationOptions soap_tmp___tr2__GetVideoEncoderConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_tmp___tr2__GetVideoEncoderConfigurationOptions.tr2__GetVideoEncoderConfigurationOptions = tr2__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetVideoEncoderConfigurationOptions, "-tr2:GetVideoEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetVideoEncoderConfigurationOptions, "-tr2:GetVideoEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoEncoderConfigurationOptions(_tr2__GetVideoEncoderConfigurationOptionsResponse &tr2__GetVideoEncoderConfigurationOptionsResponse)
{
	tr2__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "tr2:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioSourceConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioSourceConfigurationOptions)
{
	struct __tr2__GetAudioSourceConfigurationOptions soap_tmp___tr2__GetAudioSourceConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___tr2__GetAudioSourceConfigurationOptions.tr2__GetAudioSourceConfigurationOptions = tr2__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tr2__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tr2__GetAudioSourceConfigurationOptions, "-tr2:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tr2__GetAudioSourceConfigurationOptions, "-tr2:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioSourceConfigurationOptions(_tr2__GetAudioSourceConfigurationOptionsResponse &tr2__GetAudioSourceConfigurationOptionsResponse)
{
	tr2__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "tr2:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioEncoderConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioEncoderConfigurationOptions)
{
	struct __tr2__GetAudioEncoderConfigurationOptions soap_tmp___tr2__GetAudioEncoderConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_tmp___tr2__GetAudioEncoderConfigurationOptions.tr2__GetAudioEncoderConfigurationOptions = tr2__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioEncoderConfigurationOptions, "-tr2:GetAudioEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioEncoderConfigurationOptions, "-tr2:GetAudioEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioEncoderConfigurationOptions(_tr2__GetAudioEncoderConfigurationOptionsResponse &tr2__GetAudioEncoderConfigurationOptionsResponse)
{
	tr2__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "tr2:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMetadataConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetMetadataConfigurationOptions)
{
	struct __tr2__GetMetadataConfigurationOptions soap_tmp___tr2__GetMetadataConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions";
	soap_tmp___tr2__GetMetadataConfigurationOptions.tr2__GetMetadataConfigurationOptions = tr2__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetMetadataConfigurationOptions(soap, &soap_tmp___tr2__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetMetadataConfigurationOptions(soap, &soap_tmp___tr2__GetMetadataConfigurationOptions, "-tr2:GetMetadataConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetMetadataConfigurationOptions(soap, &soap_tmp___tr2__GetMetadataConfigurationOptions, "-tr2:GetMetadataConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMetadataConfigurationOptions(_tr2__GetMetadataConfigurationOptionsResponse &tr2__GetMetadataConfigurationOptionsResponse)
{
	tr2__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetMetadataConfigurationOptionsResponse.soap_get(soap, "tr2:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioOutputConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioOutputConfigurationOptions)
{
	struct __tr2__GetAudioOutputConfigurationOptions soap_tmp___tr2__GetAudioOutputConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___tr2__GetAudioOutputConfigurationOptions.tr2__GetAudioOutputConfigurationOptions = tr2__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tr2__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tr2__GetAudioOutputConfigurationOptions, "-tr2:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tr2__GetAudioOutputConfigurationOptions, "-tr2:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioOutputConfigurationOptions(_tr2__GetAudioOutputConfigurationOptionsResponse &tr2__GetAudioOutputConfigurationOptionsResponse)
{
	tr2__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "tr2:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetAudioDecoderConfigurationOptions(const char *soap_endpoint_url, const char *soap_action, tr2__GetConfiguration *tr2__GetAudioDecoderConfigurationOptions)
{
	struct __tr2__GetAudioDecoderConfigurationOptions soap_tmp___tr2__GetAudioDecoderConfigurationOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_tmp___tr2__GetAudioDecoderConfigurationOptions.tr2__GetAudioDecoderConfigurationOptions = tr2__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioDecoderConfigurationOptions, "-tr2:GetAudioDecoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioDecoderConfigurationOptions, "-tr2:GetAudioDecoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetAudioDecoderConfigurationOptions(_tr2__GetAudioDecoderConfigurationOptionsResponse &tr2__GetAudioDecoderConfigurationOptionsResponse)
{
	tr2__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "tr2:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoEncoderInstances(const char *soap_endpoint_url, const char *soap_action, _tr2__GetVideoEncoderInstances *tr2__GetVideoEncoderInstances)
{
	struct __tr2__GetVideoEncoderInstances soap_tmp___tr2__GetVideoEncoderInstances;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances";
	soap_tmp___tr2__GetVideoEncoderInstances.tr2__GetVideoEncoderInstances = tr2__GetVideoEncoderInstances;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetVideoEncoderInstances(soap, &soap_tmp___tr2__GetVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetVideoEncoderInstances(soap, &soap_tmp___tr2__GetVideoEncoderInstances, "-tr2:GetVideoEncoderInstances", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetVideoEncoderInstances(soap, &soap_tmp___tr2__GetVideoEncoderInstances, "-tr2:GetVideoEncoderInstances", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoEncoderInstances(_tr2__GetVideoEncoderInstancesResponse &tr2__GetVideoEncoderInstancesResponse)
{
	tr2__GetVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetVideoEncoderInstancesResponse.soap_get(soap, "tr2:GetVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetStreamUri(const char *soap_endpoint_url, const char *soap_action, _tr2__GetStreamUri *tr2__GetStreamUri)
{
	struct __tr2__GetStreamUri soap_tmp___tr2__GetStreamUri;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetStreamUri";
	soap_tmp___tr2__GetStreamUri.tr2__GetStreamUri = tr2__GetStreamUri;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetStreamUri(soap, &soap_tmp___tr2__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetStreamUri(soap, &soap_tmp___tr2__GetStreamUri, "-tr2:GetStreamUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetStreamUri(soap, &soap_tmp___tr2__GetStreamUri, "-tr2:GetStreamUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetStreamUri(_tr2__GetStreamUriResponse &tr2__GetStreamUriResponse)
{
	tr2__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetStreamUriResponse.soap_get(soap, "tr2:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_StartMulticastStreaming(const char *soap_endpoint_url, const char *soap_action, tr2__StartStopMulticastStreaming *tr2__StartMulticastStreaming)
{
	struct __tr2__StartMulticastStreaming soap_tmp___tr2__StartMulticastStreaming;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming";
	soap_tmp___tr2__StartMulticastStreaming.tr2__StartMulticastStreaming = tr2__StartMulticastStreaming;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__StartMulticastStreaming(soap, &soap_tmp___tr2__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__StartMulticastStreaming(soap, &soap_tmp___tr2__StartMulticastStreaming, "-tr2:StartMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__StartMulticastStreaming(soap, &soap_tmp___tr2__StartMulticastStreaming, "-tr2:StartMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_StartMulticastStreaming(tr2__SetConfigurationResponse &tr2__StartMulticastStreamingResponse)
{
	struct __tr2__StartMulticastStreamingResponse *soap_tmp___tr2__StartMulticastStreamingResponse;
	tr2__StartMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__StartMulticastStreamingResponse = soap_get___tr2__StartMulticastStreamingResponse(soap, NULL, "-tr2:StartMulticastStreamingResponse", NULL);
	if (!soap_tmp___tr2__StartMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__StartMulticastStreamingResponse = soap_tmp___tr2__StartMulticastStreamingResponse->tr2__StartMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_StopMulticastStreaming(const char *soap_endpoint_url, const char *soap_action, tr2__StartStopMulticastStreaming *tr2__StopMulticastStreaming)
{
	struct __tr2__StopMulticastStreaming soap_tmp___tr2__StopMulticastStreaming;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming";
	soap_tmp___tr2__StopMulticastStreaming.tr2__StopMulticastStreaming = tr2__StopMulticastStreaming;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__StopMulticastStreaming(soap, &soap_tmp___tr2__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__StopMulticastStreaming(soap, &soap_tmp___tr2__StopMulticastStreaming, "-tr2:StopMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__StopMulticastStreaming(soap, &soap_tmp___tr2__StopMulticastStreaming, "-tr2:StopMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_StopMulticastStreaming(tr2__SetConfigurationResponse &tr2__StopMulticastStreamingResponse)
{
	struct __tr2__StopMulticastStreamingResponse *soap_tmp___tr2__StopMulticastStreamingResponse;
	tr2__StopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__StopMulticastStreamingResponse = soap_get___tr2__StopMulticastStreamingResponse(soap, NULL, "-tr2:StopMulticastStreamingResponse", NULL);
	if (!soap_tmp___tr2__StopMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__StopMulticastStreamingResponse = soap_tmp___tr2__StopMulticastStreamingResponse->tr2__StopMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetSynchronizationPoint(const char *soap_endpoint_url, const char *soap_action, _tr2__SetSynchronizationPoint *tr2__SetSynchronizationPoint)
{
	struct __tr2__SetSynchronizationPoint soap_tmp___tr2__SetSynchronizationPoint;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint";
	soap_tmp___tr2__SetSynchronizationPoint.tr2__SetSynchronizationPoint = tr2__SetSynchronizationPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetSynchronizationPoint(soap, &soap_tmp___tr2__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetSynchronizationPoint(soap, &soap_tmp___tr2__SetSynchronizationPoint, "-tr2:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetSynchronizationPoint(soap, &soap_tmp___tr2__SetSynchronizationPoint, "-tr2:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetSynchronizationPoint(_tr2__SetSynchronizationPointResponse &tr2__SetSynchronizationPointResponse)
{
	tr2__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__SetSynchronizationPointResponse.soap_get(soap, "tr2:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetSnapshotUri(const char *soap_endpoint_url, const char *soap_action, _tr2__GetSnapshotUri *tr2__GetSnapshotUri)
{
	struct __tr2__GetSnapshotUri soap_tmp___tr2__GetSnapshotUri;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri";
	soap_tmp___tr2__GetSnapshotUri.tr2__GetSnapshotUri = tr2__GetSnapshotUri;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetSnapshotUri(soap, &soap_tmp___tr2__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetSnapshotUri(soap, &soap_tmp___tr2__GetSnapshotUri, "-tr2:GetSnapshotUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetSnapshotUri(soap, &soap_tmp___tr2__GetSnapshotUri, "-tr2:GetSnapshotUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetSnapshotUri(_tr2__GetSnapshotUriResponse &tr2__GetSnapshotUriResponse)
{
	tr2__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetSnapshotUriResponse.soap_get(soap, "tr2:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetVideoSourceModes(const char *soap_endpoint_url, const char *soap_action, _tr2__GetVideoSourceModes *tr2__GetVideoSourceModes)
{
	struct __tr2__GetVideoSourceModes soap_tmp___tr2__GetVideoSourceModes;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes";
	soap_tmp___tr2__GetVideoSourceModes.tr2__GetVideoSourceModes = tr2__GetVideoSourceModes;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetVideoSourceModes(soap, &soap_tmp___tr2__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetVideoSourceModes(soap, &soap_tmp___tr2__GetVideoSourceModes, "-tr2:GetVideoSourceModes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetVideoSourceModes(soap, &soap_tmp___tr2__GetVideoSourceModes, "-tr2:GetVideoSourceModes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetVideoSourceModes(_tr2__GetVideoSourceModesResponse &tr2__GetVideoSourceModesResponse)
{
	tr2__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetVideoSourceModesResponse.soap_get(soap, "tr2:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetVideoSourceMode(const char *soap_endpoint_url, const char *soap_action, _tr2__SetVideoSourceMode *tr2__SetVideoSourceMode)
{
	struct __tr2__SetVideoSourceMode soap_tmp___tr2__SetVideoSourceMode;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode";
	soap_tmp___tr2__SetVideoSourceMode.tr2__SetVideoSourceMode = tr2__SetVideoSourceMode;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetVideoSourceMode(soap, &soap_tmp___tr2__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetVideoSourceMode(soap, &soap_tmp___tr2__SetVideoSourceMode, "-tr2:SetVideoSourceMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetVideoSourceMode(soap, &soap_tmp___tr2__SetVideoSourceMode, "-tr2:SetVideoSourceMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetVideoSourceMode(_tr2__SetVideoSourceModeResponse &tr2__SetVideoSourceModeResponse)
{
	tr2__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__SetVideoSourceModeResponse.soap_get(soap, "tr2:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetOSDs(const char *soap_endpoint_url, const char *soap_action, _tr2__GetOSDs *tr2__GetOSDs)
{
	struct __tr2__GetOSDs soap_tmp___tr2__GetOSDs;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDs";
	soap_tmp___tr2__GetOSDs.tr2__GetOSDs = tr2__GetOSDs;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetOSDs(soap, &soap_tmp___tr2__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetOSDs(soap, &soap_tmp___tr2__GetOSDs, "-tr2:GetOSDs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetOSDs(soap, &soap_tmp___tr2__GetOSDs, "-tr2:GetOSDs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetOSDs(_tr2__GetOSDsResponse &tr2__GetOSDsResponse)
{
	tr2__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetOSDsResponse.soap_get(soap, "tr2:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetOSDOptions(const char *soap_endpoint_url, const char *soap_action, _tr2__GetOSDOptions *tr2__GetOSDOptions)
{
	struct __tr2__GetOSDOptions soap_tmp___tr2__GetOSDOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions";
	soap_tmp___tr2__GetOSDOptions.tr2__GetOSDOptions = tr2__GetOSDOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetOSDOptions(soap, &soap_tmp___tr2__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetOSDOptions(soap, &soap_tmp___tr2__GetOSDOptions, "-tr2:GetOSDOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetOSDOptions(soap, &soap_tmp___tr2__GetOSDOptions, "-tr2:GetOSDOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetOSDOptions(_tr2__GetOSDOptionsResponse &tr2__GetOSDOptionsResponse)
{
	tr2__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetOSDOptionsResponse.soap_get(soap, "tr2:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetOSD(const char *soap_endpoint_url, const char *soap_action, _tr2__SetOSD *tr2__SetOSD)
{
	struct __tr2__SetOSD soap_tmp___tr2__SetOSD;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetOSD";
	soap_tmp___tr2__SetOSD.tr2__SetOSD = tr2__SetOSD;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetOSD(soap, &soap_tmp___tr2__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetOSD(soap, &soap_tmp___tr2__SetOSD, "-tr2:SetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetOSD(soap, &soap_tmp___tr2__SetOSD, "-tr2:SetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetOSD(tr2__SetConfigurationResponse &tr2__SetOSDResponse)
{
	struct __tr2__SetOSDResponse *soap_tmp___tr2__SetOSDResponse;
	tr2__SetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetOSDResponse = soap_get___tr2__SetOSDResponse(soap, NULL, "-tr2:SetOSDResponse", NULL);
	if (!soap_tmp___tr2__SetOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetOSDResponse = soap_tmp___tr2__SetOSDResponse->tr2__SetOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_CreateOSD(const char *soap_endpoint_url, const char *soap_action, _tr2__CreateOSD *tr2__CreateOSD)
{
	struct __tr2__CreateOSD soap_tmp___tr2__CreateOSD;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateOSD";
	soap_tmp___tr2__CreateOSD.tr2__CreateOSD = tr2__CreateOSD;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__CreateOSD(soap, &soap_tmp___tr2__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__CreateOSD(soap, &soap_tmp___tr2__CreateOSD, "-tr2:CreateOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__CreateOSD(soap, &soap_tmp___tr2__CreateOSD, "-tr2:CreateOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_CreateOSD(_tr2__CreateOSDResponse &tr2__CreateOSDResponse)
{
	tr2__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__CreateOSDResponse.soap_get(soap, "tr2:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_DeleteOSD(const char *soap_endpoint_url, const char *soap_action, _tr2__DeleteOSD *tr2__DeleteOSD)
{
	struct __tr2__DeleteOSD soap_tmp___tr2__DeleteOSD;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteOSD";
	soap_tmp___tr2__DeleteOSD.tr2__DeleteOSD = tr2__DeleteOSD;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__DeleteOSD(soap, &soap_tmp___tr2__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__DeleteOSD(soap, &soap_tmp___tr2__DeleteOSD, "-tr2:DeleteOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__DeleteOSD(soap, &soap_tmp___tr2__DeleteOSD, "-tr2:DeleteOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_DeleteOSD(tr2__SetConfigurationResponse &tr2__DeleteOSDResponse)
{
	struct __tr2__DeleteOSDResponse *soap_tmp___tr2__DeleteOSDResponse;
	tr2__DeleteOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__DeleteOSDResponse = soap_get___tr2__DeleteOSDResponse(soap, NULL, "-tr2:DeleteOSDResponse", NULL);
	if (!soap_tmp___tr2__DeleteOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__DeleteOSDResponse = soap_tmp___tr2__DeleteOSDResponse->tr2__DeleteOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMasks(const char *soap_endpoint_url, const char *soap_action, _tr2__GetMasks *tr2__GetMasks)
{
	struct __tr2__GetMasks soap_tmp___tr2__GetMasks;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMasks";
	soap_tmp___tr2__GetMasks.tr2__GetMasks = tr2__GetMasks;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetMasks(soap, &soap_tmp___tr2__GetMasks);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetMasks(soap, &soap_tmp___tr2__GetMasks, "-tr2:GetMasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetMasks(soap, &soap_tmp___tr2__GetMasks, "-tr2:GetMasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMasks(_tr2__GetMasksResponse &tr2__GetMasksResponse)
{
	tr2__GetMasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetMasksResponse.soap_get(soap, "tr2:GetMasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_GetMaskOptions(const char *soap_endpoint_url, const char *soap_action, _tr2__GetMaskOptions *tr2__GetMaskOptions)
{
	struct __tr2__GetMaskOptions soap_tmp___tr2__GetMaskOptions;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions";
	soap_tmp___tr2__GetMaskOptions.tr2__GetMaskOptions = tr2__GetMaskOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__GetMaskOptions(soap, &soap_tmp___tr2__GetMaskOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__GetMaskOptions(soap, &soap_tmp___tr2__GetMaskOptions, "-tr2:GetMaskOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__GetMaskOptions(soap, &soap_tmp___tr2__GetMaskOptions, "-tr2:GetMaskOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_GetMaskOptions(_tr2__GetMaskOptionsResponse &tr2__GetMaskOptionsResponse)
{
	tr2__GetMaskOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__GetMaskOptionsResponse.soap_get(soap, "tr2:GetMaskOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_SetMask(const char *soap_endpoint_url, const char *soap_action, _tr2__SetMask *tr2__SetMask)
{
	struct __tr2__SetMask soap_tmp___tr2__SetMask;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMask";
	soap_tmp___tr2__SetMask.tr2__SetMask = tr2__SetMask;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetMask(soap, &soap_tmp___tr2__SetMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetMask(soap, &soap_tmp___tr2__SetMask, "-tr2:SetMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetMask(soap, &soap_tmp___tr2__SetMask, "-tr2:SetMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_SetMask(tr2__SetConfigurationResponse &tr2__SetMaskResponse)
{
	struct __tr2__SetMaskResponse *soap_tmp___tr2__SetMaskResponse;
	tr2__SetMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__SetMaskResponse = soap_get___tr2__SetMaskResponse(soap, NULL, "-tr2:SetMaskResponse", NULL);
	if (!soap_tmp___tr2__SetMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__SetMaskResponse = soap_tmp___tr2__SetMaskResponse->tr2__SetMaskResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::send_CreateMask(const char *soap_endpoint_url, const char *soap_action, _tr2__CreateMask *tr2__CreateMask)
{
	struct __tr2__CreateMask soap_tmp___tr2__CreateMask;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateMask";
	soap_tmp___tr2__CreateMask.tr2__CreateMask = tr2__CreateMask;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__CreateMask(soap, &soap_tmp___tr2__CreateMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__CreateMask(soap, &soap_tmp___tr2__CreateMask, "-tr2:CreateMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__CreateMask(soap, &soap_tmp___tr2__CreateMask, "-tr2:CreateMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_CreateMask(_tr2__CreateMaskResponse &tr2__CreateMaskResponse)
{
	tr2__CreateMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tr2__CreateMaskResponse.soap_get(soap, "tr2:CreateMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::send_DeleteMask(const char *soap_endpoint_url, const char *soap_action, _tr2__DeleteMask *tr2__DeleteMask)
{
	struct __tr2__DeleteMask soap_tmp___tr2__DeleteMask;
	if (soap_endpoint_url != NULL)
		soap_endpoint = soap_endpoint_url;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteMask";
	soap_tmp___tr2__DeleteMask.tr2__DeleteMask = tr2__DeleteMask;
	soap_begin(soap);
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__DeleteMask(soap, &soap_tmp___tr2__DeleteMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__DeleteMask(soap, &soap_tmp___tr2__DeleteMask, "-tr2:DeleteMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__DeleteMask(soap, &soap_tmp___tr2__DeleteMask, "-tr2:DeleteMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

int Media2BindingProxy::recv_DeleteMask(tr2__SetConfigurationResponse &tr2__DeleteMaskResponse)
{
	struct __tr2__DeleteMaskResponse *soap_tmp___tr2__DeleteMaskResponse;
	tr2__DeleteMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___tr2__DeleteMaskResponse = soap_get___tr2__DeleteMaskResponse(soap, NULL, "-tr2:DeleteMaskResponse", NULL);
	if (!soap_tmp___tr2__DeleteMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	tr2__DeleteMaskResponse = soap_tmp___tr2__DeleteMaskResponse->tr2__DeleteMaskResponse;
	return soap_closesock(soap);
}
/* End of client proxy code */
