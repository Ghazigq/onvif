/* soapMedia2BindingService.cpp
   Generated by gSOAP 2.8.122 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingService.h"

Media2BindingService::Media2BindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingService::Media2BindingService(const Media2BindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

Media2BindingService::Media2BindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingService_init(_soap->imode, _soap->omode);
}

Media2BindingService::Media2BindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingService_init(iomode, iomode);
}

Media2BindingService::Media2BindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingService_init(imode, omode);
}

Media2BindingService::~Media2BindingService()
{	if (this->soap_own)
	{	Media2BindingService::destroy();
		soap_free(this->soap);
	}
}

void Media2BindingService::Media2BindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        { "SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL },
        { "SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL },
        { "xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL },
        { "xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL },
        { "wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", "http://www.w3.org/2005/08/addressing", NULL },
        { "wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL },
        { "chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL },
        { "wsdd10", "http://tempuri.org/wsdd10.xsd", NULL, NULL },
        { "wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL },
        { "xmime", "http://tempuri.org/xmime.xsd", NULL, NULL },
        { "xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL },
        { "tt", "http://www.onvif.org/ver10/schema", NULL, NULL },
        { "wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL },
        { "wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL },
        { "wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL },
        { "tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL },
        { "tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL },
        { "tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL },
        { "wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL },
        { "timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL },
        { "tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL },
        { "tr2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL },
        { "trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL },
        { NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void Media2BindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void Media2BindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	Media2BindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
Media2BindingService *Media2BindingService::copy()
{	Media2BindingService *dup = SOAP_NEW_UNMANAGED(Media2BindingService);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}
#endif

Media2BindingService& Media2BindingService::operator=(const Media2BindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int Media2BindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int Media2BindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int Media2BindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int Media2BindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int Media2BindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int Media2BindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void Media2BindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *Media2BindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void Media2BindingService::soap_noheader()
{	this->soap->header = NULL;
}

void Media2BindingService::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance)
{
	::soap_header(this->soap);
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
}

::SOAP_ENV__Header *Media2BindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int Media2BindingService::run(int port, int backlog)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, backlog)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int Media2BindingService::ssl_run(int port, int backlog)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, backlog)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET Media2BindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET Media2BindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int Media2BindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int Media2BindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___tr2__GetServiceCapabilities(struct soap*, Media2BindingService*);
static int serve___tr2__CreateProfile(struct soap*, Media2BindingService*);
static int serve___tr2__GetProfiles(struct soap*, Media2BindingService*);
static int serve___tr2__AddConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__RemoveConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__DeleteProfile(struct soap*, Media2BindingService*);
static int serve___tr2__GetVideoSourceConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__GetVideoEncoderConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioSourceConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioEncoderConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__GetAnalyticsConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__GetMetadataConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioOutputConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioDecoderConfigurations(struct soap*, Media2BindingService*);
static int serve___tr2__SetVideoSourceConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__SetVideoEncoderConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__SetAudioSourceConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__SetAudioEncoderConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__SetMetadataConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__SetAudioOutputConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__SetAudioDecoderConfiguration(struct soap*, Media2BindingService*);
static int serve___tr2__GetVideoSourceConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___tr2__GetVideoEncoderConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioSourceConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioEncoderConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___tr2__GetMetadataConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioOutputConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___tr2__GetAudioDecoderConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___tr2__GetVideoEncoderInstances(struct soap*, Media2BindingService*);
static int serve___tr2__GetStreamUri(struct soap*, Media2BindingService*);
static int serve___tr2__StartMulticastStreaming(struct soap*, Media2BindingService*);
static int serve___tr2__StopMulticastStreaming(struct soap*, Media2BindingService*);
static int serve___tr2__SetSynchronizationPoint(struct soap*, Media2BindingService*);
static int serve___tr2__GetSnapshotUri(struct soap*, Media2BindingService*);
static int serve___tr2__GetVideoSourceModes(struct soap*, Media2BindingService*);
static int serve___tr2__SetVideoSourceMode(struct soap*, Media2BindingService*);
static int serve___tr2__GetOSDs(struct soap*, Media2BindingService*);
static int serve___tr2__GetOSDOptions(struct soap*, Media2BindingService*);
static int serve___tr2__SetOSD(struct soap*, Media2BindingService*);
static int serve___tr2__CreateOSD(struct soap*, Media2BindingService*);
static int serve___tr2__DeleteOSD(struct soap*, Media2BindingService*);
static int serve___tr2__GetMasks(struct soap*, Media2BindingService*);
static int serve___tr2__GetMaskOptions(struct soap*, Media2BindingService*);
static int serve___tr2__SetMask(struct soap*, Media2BindingService*);
static int serve___tr2__CreateMask(struct soap*, Media2BindingService*);
static int serve___tr2__DeleteMask(struct soap*, Media2BindingService*);

int Media2BindingService::dispatch()
{	return dispatch(this->soap);
}

int Media2BindingService::dispatch(struct soap* soap)
{
	Media2BindingService_init(soap->imode, soap->omode);
	(void)soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetServiceCapabilities"))
		return serve___tr2__GetServiceCapabilities(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:CreateProfile"))
		return serve___tr2__CreateProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetProfiles"))
		return serve___tr2__GetProfiles(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:AddConfiguration"))
		return serve___tr2__AddConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:RemoveConfiguration"))
		return serve___tr2__RemoveConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:DeleteProfile"))
		return serve___tr2__DeleteProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetVideoSourceConfigurations"))
		return serve___tr2__GetVideoSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetVideoEncoderConfigurations"))
		return serve___tr2__GetVideoEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioSourceConfigurations"))
		return serve___tr2__GetAudioSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioEncoderConfigurations"))
		return serve___tr2__GetAudioEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAnalyticsConfigurations"))
		return serve___tr2__GetAnalyticsConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetMetadataConfigurations"))
		return serve___tr2__GetMetadataConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioOutputConfigurations"))
		return serve___tr2__GetAudioOutputConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioDecoderConfigurations"))
		return serve___tr2__GetAudioDecoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetVideoSourceConfiguration"))
		return serve___tr2__SetVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetVideoEncoderConfiguration"))
		return serve___tr2__SetVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetAudioSourceConfiguration"))
		return serve___tr2__SetAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetAudioEncoderConfiguration"))
		return serve___tr2__SetAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetMetadataConfiguration"))
		return serve___tr2__SetMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetAudioOutputConfiguration"))
		return serve___tr2__SetAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetAudioDecoderConfiguration"))
		return serve___tr2__SetAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetVideoSourceConfigurationOptions"))
		return serve___tr2__GetVideoSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetVideoEncoderConfigurationOptions"))
		return serve___tr2__GetVideoEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioSourceConfigurationOptions"))
		return serve___tr2__GetAudioSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioEncoderConfigurationOptions"))
		return serve___tr2__GetAudioEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetMetadataConfigurationOptions"))
		return serve___tr2__GetMetadataConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioOutputConfigurationOptions"))
		return serve___tr2__GetAudioOutputConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetAudioDecoderConfigurationOptions"))
		return serve___tr2__GetAudioDecoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetVideoEncoderInstances"))
		return serve___tr2__GetVideoEncoderInstances(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetStreamUri"))
		return serve___tr2__GetStreamUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:StartMulticastStreaming"))
		return serve___tr2__StartMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:StopMulticastStreaming"))
		return serve___tr2__StopMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetSynchronizationPoint"))
		return serve___tr2__SetSynchronizationPoint(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetSnapshotUri"))
		return serve___tr2__GetSnapshotUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetVideoSourceModes"))
		return serve___tr2__GetVideoSourceModes(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetVideoSourceMode"))
		return serve___tr2__SetVideoSourceMode(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetOSDs"))
		return serve___tr2__GetOSDs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetOSDOptions"))
		return serve___tr2__GetOSDOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetOSD"))
		return serve___tr2__SetOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:CreateOSD"))
		return serve___tr2__CreateOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:DeleteOSD"))
		return serve___tr2__DeleteOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetMasks"))
		return serve___tr2__GetMasks(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:GetMaskOptions"))
		return serve___tr2__GetMaskOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:SetMask"))
		return serve___tr2__SetMask(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:CreateMask"))
		return serve___tr2__CreateMask(soap, this);
	if (!soap_match_tag(soap, soap->tag, "tr2:DeleteMask"))
		return serve___tr2__DeleteMask(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___tr2__GetServiceCapabilities(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetServiceCapabilities soap_tmp___tr2__GetServiceCapabilities;
	_tr2__GetServiceCapabilitiesResponse tr2__GetServiceCapabilitiesResponse;
	tr2__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___tr2__GetServiceCapabilities(soap, &soap_tmp___tr2__GetServiceCapabilities);
	if (!soap_get___tr2__GetServiceCapabilities(soap, &soap_tmp___tr2__GetServiceCapabilities, "-tr2:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___tr2__GetServiceCapabilities.tr2__GetServiceCapabilities, tr2__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetServiceCapabilitiesResponse.soap_put(soap, "tr2:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetServiceCapabilitiesResponse.soap_put(soap, "tr2:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__CreateProfile(struct soap *soap, Media2BindingService *service)
{	struct __tr2__CreateProfile soap_tmp___tr2__CreateProfile;
	_tr2__CreateProfileResponse tr2__CreateProfileResponse;
	tr2__CreateProfileResponse.soap_default(soap);
	soap_default___tr2__CreateProfile(soap, &soap_tmp___tr2__CreateProfile);
	if (!soap_get___tr2__CreateProfile(soap, &soap_tmp___tr2__CreateProfile, "-tr2:CreateProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateProfile(soap_tmp___tr2__CreateProfile.tr2__CreateProfile, tr2__CreateProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__CreateProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__CreateProfileResponse.soap_put(soap, "tr2:CreateProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__CreateProfileResponse.soap_put(soap, "tr2:CreateProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetProfiles(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetProfiles soap_tmp___tr2__GetProfiles;
	_tr2__GetProfilesResponse tr2__GetProfilesResponse;
	tr2__GetProfilesResponse.soap_default(soap);
	soap_default___tr2__GetProfiles(soap, &soap_tmp___tr2__GetProfiles);
	if (!soap_get___tr2__GetProfiles(soap, &soap_tmp___tr2__GetProfiles, "-tr2:GetProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfiles(soap_tmp___tr2__GetProfiles.tr2__GetProfiles, tr2__GetProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetProfilesResponse.soap_put(soap, "tr2:GetProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetProfilesResponse.soap_put(soap, "tr2:GetProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__AddConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__AddConfiguration soap_tmp___tr2__AddConfiguration;
	_tr2__AddConfigurationResponse tr2__AddConfigurationResponse;
	tr2__AddConfigurationResponse.soap_default(soap);
	soap_default___tr2__AddConfiguration(soap, &soap_tmp___tr2__AddConfiguration);
	if (!soap_get___tr2__AddConfiguration(soap, &soap_tmp___tr2__AddConfiguration, "-tr2:AddConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddConfiguration(soap_tmp___tr2__AddConfiguration.tr2__AddConfiguration, tr2__AddConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__AddConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__AddConfigurationResponse.soap_put(soap, "tr2:AddConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__AddConfigurationResponse.soap_put(soap, "tr2:AddConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__RemoveConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__RemoveConfiguration soap_tmp___tr2__RemoveConfiguration;
	_tr2__RemoveConfigurationResponse tr2__RemoveConfigurationResponse;
	tr2__RemoveConfigurationResponse.soap_default(soap);
	soap_default___tr2__RemoveConfiguration(soap, &soap_tmp___tr2__RemoveConfiguration);
	if (!soap_get___tr2__RemoveConfiguration(soap, &soap_tmp___tr2__RemoveConfiguration, "-tr2:RemoveConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveConfiguration(soap_tmp___tr2__RemoveConfiguration.tr2__RemoveConfiguration, tr2__RemoveConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__RemoveConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__RemoveConfigurationResponse.soap_put(soap, "tr2:RemoveConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__RemoveConfigurationResponse.soap_put(soap, "tr2:RemoveConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__DeleteProfile(struct soap *soap, Media2BindingService *service)
{	struct __tr2__DeleteProfile soap_tmp___tr2__DeleteProfile;
	_tr2__DeleteProfileResponse tr2__DeleteProfileResponse;
	tr2__DeleteProfileResponse.soap_default(soap);
	soap_default___tr2__DeleteProfile(soap, &soap_tmp___tr2__DeleteProfile);
	if (!soap_get___tr2__DeleteProfile(soap, &soap_tmp___tr2__DeleteProfile, "-tr2:DeleteProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteProfile(soap_tmp___tr2__DeleteProfile.tr2__DeleteProfile, tr2__DeleteProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__DeleteProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__DeleteProfileResponse.soap_put(soap, "tr2:DeleteProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__DeleteProfileResponse.soap_put(soap, "tr2:DeleteProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetVideoSourceConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetVideoSourceConfigurations soap_tmp___tr2__GetVideoSourceConfigurations;
	_tr2__GetVideoSourceConfigurationsResponse tr2__GetVideoSourceConfigurationsResponse;
	tr2__GetVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetVideoSourceConfigurations(soap, &soap_tmp___tr2__GetVideoSourceConfigurations);
	if (!soap_get___tr2__GetVideoSourceConfigurations(soap, &soap_tmp___tr2__GetVideoSourceConfigurations, "-tr2:GetVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurations(soap_tmp___tr2__GetVideoSourceConfigurations.tr2__GetVideoSourceConfigurations, tr2__GetVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetVideoSourceConfigurationsResponse.soap_put(soap, "tr2:GetVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetVideoSourceConfigurationsResponse.soap_put(soap, "tr2:GetVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetVideoEncoderConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetVideoEncoderConfigurations soap_tmp___tr2__GetVideoEncoderConfigurations;
	_tr2__GetVideoEncoderConfigurationsResponse tr2__GetVideoEncoderConfigurationsResponse;
	tr2__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetVideoEncoderConfigurations(soap, &soap_tmp___tr2__GetVideoEncoderConfigurations);
	if (!soap_get___tr2__GetVideoEncoderConfigurations(soap, &soap_tmp___tr2__GetVideoEncoderConfigurations, "-tr2:GetVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurations(soap_tmp___tr2__GetVideoEncoderConfigurations.tr2__GetVideoEncoderConfigurations, tr2__GetVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetVideoEncoderConfigurationsResponse.soap_put(soap, "tr2:GetVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetVideoEncoderConfigurationsResponse.soap_put(soap, "tr2:GetVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioSourceConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioSourceConfigurations soap_tmp___tr2__GetAudioSourceConfigurations;
	_tr2__GetAudioSourceConfigurationsResponse tr2__GetAudioSourceConfigurationsResponse;
	tr2__GetAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetAudioSourceConfigurations(soap, &soap_tmp___tr2__GetAudioSourceConfigurations);
	if (!soap_get___tr2__GetAudioSourceConfigurations(soap, &soap_tmp___tr2__GetAudioSourceConfigurations, "-tr2:GetAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurations(soap_tmp___tr2__GetAudioSourceConfigurations.tr2__GetAudioSourceConfigurations, tr2__GetAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioSourceConfigurationsResponse.soap_put(soap, "tr2:GetAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioSourceConfigurationsResponse.soap_put(soap, "tr2:GetAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioEncoderConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioEncoderConfigurations soap_tmp___tr2__GetAudioEncoderConfigurations;
	_tr2__GetAudioEncoderConfigurationsResponse tr2__GetAudioEncoderConfigurationsResponse;
	tr2__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetAudioEncoderConfigurations(soap, &soap_tmp___tr2__GetAudioEncoderConfigurations);
	if (!soap_get___tr2__GetAudioEncoderConfigurations(soap, &soap_tmp___tr2__GetAudioEncoderConfigurations, "-tr2:GetAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurations(soap_tmp___tr2__GetAudioEncoderConfigurations.tr2__GetAudioEncoderConfigurations, tr2__GetAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioEncoderConfigurationsResponse.soap_put(soap, "tr2:GetAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioEncoderConfigurationsResponse.soap_put(soap, "tr2:GetAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAnalyticsConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAnalyticsConfigurations soap_tmp___tr2__GetAnalyticsConfigurations;
	_tr2__GetAnalyticsConfigurationsResponse tr2__GetAnalyticsConfigurationsResponse;
	tr2__GetAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetAnalyticsConfigurations(soap, &soap_tmp___tr2__GetAnalyticsConfigurations);
	if (!soap_get___tr2__GetAnalyticsConfigurations(soap, &soap_tmp___tr2__GetAnalyticsConfigurations, "-tr2:GetAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsConfigurations(soap_tmp___tr2__GetAnalyticsConfigurations.tr2__GetAnalyticsConfigurations, tr2__GetAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAnalyticsConfigurationsResponse.soap_put(soap, "tr2:GetAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAnalyticsConfigurationsResponse.soap_put(soap, "tr2:GetAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetMetadataConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetMetadataConfigurations soap_tmp___tr2__GetMetadataConfigurations;
	_tr2__GetMetadataConfigurationsResponse tr2__GetMetadataConfigurationsResponse;
	tr2__GetMetadataConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetMetadataConfigurations(soap, &soap_tmp___tr2__GetMetadataConfigurations);
	if (!soap_get___tr2__GetMetadataConfigurations(soap, &soap_tmp___tr2__GetMetadataConfigurations, "-tr2:GetMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurations(soap_tmp___tr2__GetMetadataConfigurations.tr2__GetMetadataConfigurations, tr2__GetMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetMetadataConfigurationsResponse.soap_put(soap, "tr2:GetMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetMetadataConfigurationsResponse.soap_put(soap, "tr2:GetMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioOutputConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioOutputConfigurations soap_tmp___tr2__GetAudioOutputConfigurations;
	_tr2__GetAudioOutputConfigurationsResponse tr2__GetAudioOutputConfigurationsResponse;
	tr2__GetAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetAudioOutputConfigurations(soap, &soap_tmp___tr2__GetAudioOutputConfigurations);
	if (!soap_get___tr2__GetAudioOutputConfigurations(soap, &soap_tmp___tr2__GetAudioOutputConfigurations, "-tr2:GetAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurations(soap_tmp___tr2__GetAudioOutputConfigurations.tr2__GetAudioOutputConfigurations, tr2__GetAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioOutputConfigurationsResponse.soap_put(soap, "tr2:GetAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioOutputConfigurationsResponse.soap_put(soap, "tr2:GetAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioDecoderConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioDecoderConfigurations soap_tmp___tr2__GetAudioDecoderConfigurations;
	_tr2__GetAudioDecoderConfigurationsResponse tr2__GetAudioDecoderConfigurationsResponse;
	tr2__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___tr2__GetAudioDecoderConfigurations(soap, &soap_tmp___tr2__GetAudioDecoderConfigurations);
	if (!soap_get___tr2__GetAudioDecoderConfigurations(soap, &soap_tmp___tr2__GetAudioDecoderConfigurations, "-tr2:GetAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurations(soap_tmp___tr2__GetAudioDecoderConfigurations.tr2__GetAudioDecoderConfigurations, tr2__GetAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioDecoderConfigurationsResponse.soap_put(soap, "tr2:GetAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioDecoderConfigurationsResponse.soap_put(soap, "tr2:GetAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetVideoSourceConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetVideoSourceConfiguration soap_tmp___tr2__SetVideoSourceConfiguration;
	struct __tr2__SetVideoSourceConfigurationResponse soap_tmp___tr2__SetVideoSourceConfigurationResponse;
	soap_default___tr2__SetVideoSourceConfigurationResponse(soap, &soap_tmp___tr2__SetVideoSourceConfigurationResponse);
	soap_default___tr2__SetVideoSourceConfiguration(soap, &soap_tmp___tr2__SetVideoSourceConfiguration);
	if (!soap_get___tr2__SetVideoSourceConfiguration(soap, &soap_tmp___tr2__SetVideoSourceConfiguration, "-tr2:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceConfiguration(soap_tmp___tr2__SetVideoSourceConfiguration.tr2__SetVideoSourceConfiguration, soap_tmp___tr2__SetVideoSourceConfigurationResponse.tr2__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetVideoSourceConfigurationResponse(soap, &soap_tmp___tr2__SetVideoSourceConfigurationResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetVideoSourceConfigurationResponse(soap, &soap_tmp___tr2__SetVideoSourceConfigurationResponse, "-tr2:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetVideoSourceConfigurationResponse(soap, &soap_tmp___tr2__SetVideoSourceConfigurationResponse, "-tr2:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetVideoEncoderConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetVideoEncoderConfiguration soap_tmp___tr2__SetVideoEncoderConfiguration;
	struct __tr2__SetVideoEncoderConfigurationResponse soap_tmp___tr2__SetVideoEncoderConfigurationResponse;
	soap_default___tr2__SetVideoEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetVideoEncoderConfigurationResponse);
	soap_default___tr2__SetVideoEncoderConfiguration(soap, &soap_tmp___tr2__SetVideoEncoderConfiguration);
	if (!soap_get___tr2__SetVideoEncoderConfiguration(soap, &soap_tmp___tr2__SetVideoEncoderConfiguration, "-tr2:SetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoEncoderConfiguration(soap_tmp___tr2__SetVideoEncoderConfiguration.tr2__SetVideoEncoderConfiguration, soap_tmp___tr2__SetVideoEncoderConfigurationResponse.tr2__SetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetVideoEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetVideoEncoderConfigurationResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetVideoEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetVideoEncoderConfigurationResponse, "-tr2:SetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetVideoEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetVideoEncoderConfigurationResponse, "-tr2:SetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetAudioSourceConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetAudioSourceConfiguration soap_tmp___tr2__SetAudioSourceConfiguration;
	struct __tr2__SetAudioSourceConfigurationResponse soap_tmp___tr2__SetAudioSourceConfigurationResponse;
	soap_default___tr2__SetAudioSourceConfigurationResponse(soap, &soap_tmp___tr2__SetAudioSourceConfigurationResponse);
	soap_default___tr2__SetAudioSourceConfiguration(soap, &soap_tmp___tr2__SetAudioSourceConfiguration);
	if (!soap_get___tr2__SetAudioSourceConfiguration(soap, &soap_tmp___tr2__SetAudioSourceConfiguration, "-tr2:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioSourceConfiguration(soap_tmp___tr2__SetAudioSourceConfiguration.tr2__SetAudioSourceConfiguration, soap_tmp___tr2__SetAudioSourceConfigurationResponse.tr2__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioSourceConfigurationResponse(soap, &soap_tmp___tr2__SetAudioSourceConfigurationResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioSourceConfigurationResponse(soap, &soap_tmp___tr2__SetAudioSourceConfigurationResponse, "-tr2:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioSourceConfigurationResponse(soap, &soap_tmp___tr2__SetAudioSourceConfigurationResponse, "-tr2:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetAudioEncoderConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetAudioEncoderConfiguration soap_tmp___tr2__SetAudioEncoderConfiguration;
	struct __tr2__SetAudioEncoderConfigurationResponse soap_tmp___tr2__SetAudioEncoderConfigurationResponse;
	soap_default___tr2__SetAudioEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioEncoderConfigurationResponse);
	soap_default___tr2__SetAudioEncoderConfiguration(soap, &soap_tmp___tr2__SetAudioEncoderConfiguration);
	if (!soap_get___tr2__SetAudioEncoderConfiguration(soap, &soap_tmp___tr2__SetAudioEncoderConfiguration, "-tr2:SetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioEncoderConfiguration(soap_tmp___tr2__SetAudioEncoderConfiguration.tr2__SetAudioEncoderConfiguration, soap_tmp___tr2__SetAudioEncoderConfigurationResponse.tr2__SetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioEncoderConfigurationResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioEncoderConfigurationResponse, "-tr2:SetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioEncoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioEncoderConfigurationResponse, "-tr2:SetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetMetadataConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetMetadataConfiguration soap_tmp___tr2__SetMetadataConfiguration;
	struct __tr2__SetMetadataConfigurationResponse soap_tmp___tr2__SetMetadataConfigurationResponse;
	soap_default___tr2__SetMetadataConfigurationResponse(soap, &soap_tmp___tr2__SetMetadataConfigurationResponse);
	soap_default___tr2__SetMetadataConfiguration(soap, &soap_tmp___tr2__SetMetadataConfiguration);
	if (!soap_get___tr2__SetMetadataConfiguration(soap, &soap_tmp___tr2__SetMetadataConfiguration, "-tr2:SetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMetadataConfiguration(soap_tmp___tr2__SetMetadataConfiguration.tr2__SetMetadataConfiguration, soap_tmp___tr2__SetMetadataConfigurationResponse.tr2__SetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetMetadataConfigurationResponse(soap, &soap_tmp___tr2__SetMetadataConfigurationResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetMetadataConfigurationResponse(soap, &soap_tmp___tr2__SetMetadataConfigurationResponse, "-tr2:SetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetMetadataConfigurationResponse(soap, &soap_tmp___tr2__SetMetadataConfigurationResponse, "-tr2:SetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetAudioOutputConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetAudioOutputConfiguration soap_tmp___tr2__SetAudioOutputConfiguration;
	struct __tr2__SetAudioOutputConfigurationResponse soap_tmp___tr2__SetAudioOutputConfigurationResponse;
	soap_default___tr2__SetAudioOutputConfigurationResponse(soap, &soap_tmp___tr2__SetAudioOutputConfigurationResponse);
	soap_default___tr2__SetAudioOutputConfiguration(soap, &soap_tmp___tr2__SetAudioOutputConfiguration);
	if (!soap_get___tr2__SetAudioOutputConfiguration(soap, &soap_tmp___tr2__SetAudioOutputConfiguration, "-tr2:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioOutputConfiguration(soap_tmp___tr2__SetAudioOutputConfiguration.tr2__SetAudioOutputConfiguration, soap_tmp___tr2__SetAudioOutputConfigurationResponse.tr2__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioOutputConfigurationResponse(soap, &soap_tmp___tr2__SetAudioOutputConfigurationResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioOutputConfigurationResponse(soap, &soap_tmp___tr2__SetAudioOutputConfigurationResponse, "-tr2:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioOutputConfigurationResponse(soap, &soap_tmp___tr2__SetAudioOutputConfigurationResponse, "-tr2:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetAudioDecoderConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetAudioDecoderConfiguration soap_tmp___tr2__SetAudioDecoderConfiguration;
	struct __tr2__SetAudioDecoderConfigurationResponse soap_tmp___tr2__SetAudioDecoderConfigurationResponse;
	soap_default___tr2__SetAudioDecoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioDecoderConfigurationResponse);
	soap_default___tr2__SetAudioDecoderConfiguration(soap, &soap_tmp___tr2__SetAudioDecoderConfiguration);
	if (!soap_get___tr2__SetAudioDecoderConfiguration(soap, &soap_tmp___tr2__SetAudioDecoderConfiguration, "-tr2:SetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioDecoderConfiguration(soap_tmp___tr2__SetAudioDecoderConfiguration.tr2__SetAudioDecoderConfiguration, soap_tmp___tr2__SetAudioDecoderConfigurationResponse.tr2__SetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetAudioDecoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioDecoderConfigurationResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetAudioDecoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioDecoderConfigurationResponse, "-tr2:SetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetAudioDecoderConfigurationResponse(soap, &soap_tmp___tr2__SetAudioDecoderConfigurationResponse, "-tr2:SetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetVideoSourceConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetVideoSourceConfigurationOptions soap_tmp___tr2__GetVideoSourceConfigurationOptions;
	_tr2__GetVideoSourceConfigurationOptionsResponse tr2__GetVideoSourceConfigurationOptionsResponse;
	tr2__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___tr2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tr2__GetVideoSourceConfigurationOptions);
	if (!soap_get___tr2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tr2__GetVideoSourceConfigurationOptions, "-tr2:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurationOptions(soap_tmp___tr2__GetVideoSourceConfigurationOptions.tr2__GetVideoSourceConfigurationOptions, tr2__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "tr2:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "tr2:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetVideoEncoderConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetVideoEncoderConfigurationOptions soap_tmp___tr2__GetVideoEncoderConfigurationOptions;
	_tr2__GetVideoEncoderConfigurationOptionsResponse tr2__GetVideoEncoderConfigurationOptionsResponse;
	tr2__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___tr2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetVideoEncoderConfigurationOptions);
	if (!soap_get___tr2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetVideoEncoderConfigurationOptions, "-tr2:GetVideoEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurationOptions(soap_tmp___tr2__GetVideoEncoderConfigurationOptions.tr2__GetVideoEncoderConfigurationOptions, tr2__GetVideoEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetVideoEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "tr2:GetVideoEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "tr2:GetVideoEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioSourceConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioSourceConfigurationOptions soap_tmp___tr2__GetAudioSourceConfigurationOptions;
	_tr2__GetAudioSourceConfigurationOptionsResponse tr2__GetAudioSourceConfigurationOptionsResponse;
	tr2__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___tr2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tr2__GetAudioSourceConfigurationOptions);
	if (!soap_get___tr2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tr2__GetAudioSourceConfigurationOptions, "-tr2:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurationOptions(soap_tmp___tr2__GetAudioSourceConfigurationOptions.tr2__GetAudioSourceConfigurationOptions, tr2__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioEncoderConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioEncoderConfigurationOptions soap_tmp___tr2__GetAudioEncoderConfigurationOptions;
	_tr2__GetAudioEncoderConfigurationOptionsResponse tr2__GetAudioEncoderConfigurationOptionsResponse;
	tr2__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___tr2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioEncoderConfigurationOptions);
	if (!soap_get___tr2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioEncoderConfigurationOptions, "-tr2:GetAudioEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurationOptions(soap_tmp___tr2__GetAudioEncoderConfigurationOptions.tr2__GetAudioEncoderConfigurationOptions, tr2__GetAudioEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetMetadataConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetMetadataConfigurationOptions soap_tmp___tr2__GetMetadataConfigurationOptions;
	_tr2__GetMetadataConfigurationOptionsResponse tr2__GetMetadataConfigurationOptionsResponse;
	tr2__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	soap_default___tr2__GetMetadataConfigurationOptions(soap, &soap_tmp___tr2__GetMetadataConfigurationOptions);
	if (!soap_get___tr2__GetMetadataConfigurationOptions(soap, &soap_tmp___tr2__GetMetadataConfigurationOptions, "-tr2:GetMetadataConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurationOptions(soap_tmp___tr2__GetMetadataConfigurationOptions.tr2__GetMetadataConfigurationOptions, tr2__GetMetadataConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetMetadataConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetMetadataConfigurationOptionsResponse.soap_put(soap, "tr2:GetMetadataConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetMetadataConfigurationOptionsResponse.soap_put(soap, "tr2:GetMetadataConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioOutputConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioOutputConfigurationOptions soap_tmp___tr2__GetAudioOutputConfigurationOptions;
	_tr2__GetAudioOutputConfigurationOptionsResponse tr2__GetAudioOutputConfigurationOptionsResponse;
	tr2__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___tr2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tr2__GetAudioOutputConfigurationOptions);
	if (!soap_get___tr2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tr2__GetAudioOutputConfigurationOptions, "-tr2:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurationOptions(soap_tmp___tr2__GetAudioOutputConfigurationOptions.tr2__GetAudioOutputConfigurationOptions, tr2__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetAudioDecoderConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetAudioDecoderConfigurationOptions soap_tmp___tr2__GetAudioDecoderConfigurationOptions;
	_tr2__GetAudioDecoderConfigurationOptionsResponse tr2__GetAudioDecoderConfigurationOptionsResponse;
	tr2__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___tr2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioDecoderConfigurationOptions);
	if (!soap_get___tr2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___tr2__GetAudioDecoderConfigurationOptions, "-tr2:GetAudioDecoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurationOptions(soap_tmp___tr2__GetAudioDecoderConfigurationOptions.tr2__GetAudioDecoderConfigurationOptions, tr2__GetAudioDecoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetAudioDecoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioDecoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "tr2:GetAudioDecoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetVideoEncoderInstances(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetVideoEncoderInstances soap_tmp___tr2__GetVideoEncoderInstances;
	_tr2__GetVideoEncoderInstancesResponse tr2__GetVideoEncoderInstancesResponse;
	tr2__GetVideoEncoderInstancesResponse.soap_default(soap);
	soap_default___tr2__GetVideoEncoderInstances(soap, &soap_tmp___tr2__GetVideoEncoderInstances);
	if (!soap_get___tr2__GetVideoEncoderInstances(soap, &soap_tmp___tr2__GetVideoEncoderInstances, "-tr2:GetVideoEncoderInstances", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderInstances(soap_tmp___tr2__GetVideoEncoderInstances.tr2__GetVideoEncoderInstances, tr2__GetVideoEncoderInstancesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetVideoEncoderInstancesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetVideoEncoderInstancesResponse.soap_put(soap, "tr2:GetVideoEncoderInstancesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetVideoEncoderInstancesResponse.soap_put(soap, "tr2:GetVideoEncoderInstancesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetStreamUri(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetStreamUri soap_tmp___tr2__GetStreamUri;
	_tr2__GetStreamUriResponse tr2__GetStreamUriResponse;
	tr2__GetStreamUriResponse.soap_default(soap);
	soap_default___tr2__GetStreamUri(soap, &soap_tmp___tr2__GetStreamUri);
	if (!soap_get___tr2__GetStreamUri(soap, &soap_tmp___tr2__GetStreamUri, "-tr2:GetStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetStreamUri(soap_tmp___tr2__GetStreamUri.tr2__GetStreamUri, tr2__GetStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetStreamUriResponse.soap_put(soap, "tr2:GetStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetStreamUriResponse.soap_put(soap, "tr2:GetStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__StartMulticastStreaming(struct soap *soap, Media2BindingService *service)
{	struct __tr2__StartMulticastStreaming soap_tmp___tr2__StartMulticastStreaming;
	struct __tr2__StartMulticastStreamingResponse soap_tmp___tr2__StartMulticastStreamingResponse;
	soap_default___tr2__StartMulticastStreamingResponse(soap, &soap_tmp___tr2__StartMulticastStreamingResponse);
	soap_default___tr2__StartMulticastStreaming(soap, &soap_tmp___tr2__StartMulticastStreaming);
	if (!soap_get___tr2__StartMulticastStreaming(soap, &soap_tmp___tr2__StartMulticastStreaming, "-tr2:StartMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StartMulticastStreaming(soap_tmp___tr2__StartMulticastStreaming.tr2__StartMulticastStreaming, soap_tmp___tr2__StartMulticastStreamingResponse.tr2__StartMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__StartMulticastStreamingResponse(soap, &soap_tmp___tr2__StartMulticastStreamingResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__StartMulticastStreamingResponse(soap, &soap_tmp___tr2__StartMulticastStreamingResponse, "-tr2:StartMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__StartMulticastStreamingResponse(soap, &soap_tmp___tr2__StartMulticastStreamingResponse, "-tr2:StartMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__StopMulticastStreaming(struct soap *soap, Media2BindingService *service)
{	struct __tr2__StopMulticastStreaming soap_tmp___tr2__StopMulticastStreaming;
	struct __tr2__StopMulticastStreamingResponse soap_tmp___tr2__StopMulticastStreamingResponse;
	soap_default___tr2__StopMulticastStreamingResponse(soap, &soap_tmp___tr2__StopMulticastStreamingResponse);
	soap_default___tr2__StopMulticastStreaming(soap, &soap_tmp___tr2__StopMulticastStreaming);
	if (!soap_get___tr2__StopMulticastStreaming(soap, &soap_tmp___tr2__StopMulticastStreaming, "-tr2:StopMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StopMulticastStreaming(soap_tmp___tr2__StopMulticastStreaming.tr2__StopMulticastStreaming, soap_tmp___tr2__StopMulticastStreamingResponse.tr2__StopMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__StopMulticastStreamingResponse(soap, &soap_tmp___tr2__StopMulticastStreamingResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__StopMulticastStreamingResponse(soap, &soap_tmp___tr2__StopMulticastStreamingResponse, "-tr2:StopMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__StopMulticastStreamingResponse(soap, &soap_tmp___tr2__StopMulticastStreamingResponse, "-tr2:StopMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetSynchronizationPoint(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetSynchronizationPoint soap_tmp___tr2__SetSynchronizationPoint;
	_tr2__SetSynchronizationPointResponse tr2__SetSynchronizationPointResponse;
	tr2__SetSynchronizationPointResponse.soap_default(soap);
	soap_default___tr2__SetSynchronizationPoint(soap, &soap_tmp___tr2__SetSynchronizationPoint);
	if (!soap_get___tr2__SetSynchronizationPoint(soap, &soap_tmp___tr2__SetSynchronizationPoint, "-tr2:SetSynchronizationPoint", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetSynchronizationPoint(soap_tmp___tr2__SetSynchronizationPoint.tr2__SetSynchronizationPoint, tr2__SetSynchronizationPointResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__SetSynchronizationPointResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__SetSynchronizationPointResponse.soap_put(soap, "tr2:SetSynchronizationPointResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__SetSynchronizationPointResponse.soap_put(soap, "tr2:SetSynchronizationPointResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetSnapshotUri(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetSnapshotUri soap_tmp___tr2__GetSnapshotUri;
	_tr2__GetSnapshotUriResponse tr2__GetSnapshotUriResponse;
	tr2__GetSnapshotUriResponse.soap_default(soap);
	soap_default___tr2__GetSnapshotUri(soap, &soap_tmp___tr2__GetSnapshotUri);
	if (!soap_get___tr2__GetSnapshotUri(soap, &soap_tmp___tr2__GetSnapshotUri, "-tr2:GetSnapshotUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSnapshotUri(soap_tmp___tr2__GetSnapshotUri.tr2__GetSnapshotUri, tr2__GetSnapshotUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetSnapshotUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetSnapshotUriResponse.soap_put(soap, "tr2:GetSnapshotUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetSnapshotUriResponse.soap_put(soap, "tr2:GetSnapshotUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetVideoSourceModes(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetVideoSourceModes soap_tmp___tr2__GetVideoSourceModes;
	_tr2__GetVideoSourceModesResponse tr2__GetVideoSourceModesResponse;
	tr2__GetVideoSourceModesResponse.soap_default(soap);
	soap_default___tr2__GetVideoSourceModes(soap, &soap_tmp___tr2__GetVideoSourceModes);
	if (!soap_get___tr2__GetVideoSourceModes(soap, &soap_tmp___tr2__GetVideoSourceModes, "-tr2:GetVideoSourceModes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceModes(soap_tmp___tr2__GetVideoSourceModes.tr2__GetVideoSourceModes, tr2__GetVideoSourceModesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetVideoSourceModesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetVideoSourceModesResponse.soap_put(soap, "tr2:GetVideoSourceModesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetVideoSourceModesResponse.soap_put(soap, "tr2:GetVideoSourceModesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetVideoSourceMode(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetVideoSourceMode soap_tmp___tr2__SetVideoSourceMode;
	_tr2__SetVideoSourceModeResponse tr2__SetVideoSourceModeResponse;
	tr2__SetVideoSourceModeResponse.soap_default(soap);
	soap_default___tr2__SetVideoSourceMode(soap, &soap_tmp___tr2__SetVideoSourceMode);
	if (!soap_get___tr2__SetVideoSourceMode(soap, &soap_tmp___tr2__SetVideoSourceMode, "-tr2:SetVideoSourceMode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceMode(soap_tmp___tr2__SetVideoSourceMode.tr2__SetVideoSourceMode, tr2__SetVideoSourceModeResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__SetVideoSourceModeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__SetVideoSourceModeResponse.soap_put(soap, "tr2:SetVideoSourceModeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__SetVideoSourceModeResponse.soap_put(soap, "tr2:SetVideoSourceModeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetOSDs(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetOSDs soap_tmp___tr2__GetOSDs;
	_tr2__GetOSDsResponse tr2__GetOSDsResponse;
	tr2__GetOSDsResponse.soap_default(soap);
	soap_default___tr2__GetOSDs(soap, &soap_tmp___tr2__GetOSDs);
	if (!soap_get___tr2__GetOSDs(soap, &soap_tmp___tr2__GetOSDs, "-tr2:GetOSDs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDs(soap_tmp___tr2__GetOSDs.tr2__GetOSDs, tr2__GetOSDsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetOSDsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetOSDsResponse.soap_put(soap, "tr2:GetOSDsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetOSDsResponse.soap_put(soap, "tr2:GetOSDsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetOSDOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetOSDOptions soap_tmp___tr2__GetOSDOptions;
	_tr2__GetOSDOptionsResponse tr2__GetOSDOptionsResponse;
	tr2__GetOSDOptionsResponse.soap_default(soap);
	soap_default___tr2__GetOSDOptions(soap, &soap_tmp___tr2__GetOSDOptions);
	if (!soap_get___tr2__GetOSDOptions(soap, &soap_tmp___tr2__GetOSDOptions, "-tr2:GetOSDOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDOptions(soap_tmp___tr2__GetOSDOptions.tr2__GetOSDOptions, tr2__GetOSDOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetOSDOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetOSDOptionsResponse.soap_put(soap, "tr2:GetOSDOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetOSDOptionsResponse.soap_put(soap, "tr2:GetOSDOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetOSD(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetOSD soap_tmp___tr2__SetOSD;
	struct __tr2__SetOSDResponse soap_tmp___tr2__SetOSDResponse;
	soap_default___tr2__SetOSDResponse(soap, &soap_tmp___tr2__SetOSDResponse);
	soap_default___tr2__SetOSD(soap, &soap_tmp___tr2__SetOSD);
	if (!soap_get___tr2__SetOSD(soap, &soap_tmp___tr2__SetOSD, "-tr2:SetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetOSD(soap_tmp___tr2__SetOSD.tr2__SetOSD, soap_tmp___tr2__SetOSDResponse.tr2__SetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetOSDResponse(soap, &soap_tmp___tr2__SetOSDResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetOSDResponse(soap, &soap_tmp___tr2__SetOSDResponse, "-tr2:SetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetOSDResponse(soap, &soap_tmp___tr2__SetOSDResponse, "-tr2:SetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__CreateOSD(struct soap *soap, Media2BindingService *service)
{	struct __tr2__CreateOSD soap_tmp___tr2__CreateOSD;
	_tr2__CreateOSDResponse tr2__CreateOSDResponse;
	tr2__CreateOSDResponse.soap_default(soap);
	soap_default___tr2__CreateOSD(soap, &soap_tmp___tr2__CreateOSD);
	if (!soap_get___tr2__CreateOSD(soap, &soap_tmp___tr2__CreateOSD, "-tr2:CreateOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateOSD(soap_tmp___tr2__CreateOSD.tr2__CreateOSD, tr2__CreateOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__CreateOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__CreateOSDResponse.soap_put(soap, "tr2:CreateOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__CreateOSDResponse.soap_put(soap, "tr2:CreateOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__DeleteOSD(struct soap *soap, Media2BindingService *service)
{	struct __tr2__DeleteOSD soap_tmp___tr2__DeleteOSD;
	struct __tr2__DeleteOSDResponse soap_tmp___tr2__DeleteOSDResponse;
	soap_default___tr2__DeleteOSDResponse(soap, &soap_tmp___tr2__DeleteOSDResponse);
	soap_default___tr2__DeleteOSD(soap, &soap_tmp___tr2__DeleteOSD);
	if (!soap_get___tr2__DeleteOSD(soap, &soap_tmp___tr2__DeleteOSD, "-tr2:DeleteOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteOSD(soap_tmp___tr2__DeleteOSD.tr2__DeleteOSD, soap_tmp___tr2__DeleteOSDResponse.tr2__DeleteOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__DeleteOSDResponse(soap, &soap_tmp___tr2__DeleteOSDResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__DeleteOSDResponse(soap, &soap_tmp___tr2__DeleteOSDResponse, "-tr2:DeleteOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__DeleteOSDResponse(soap, &soap_tmp___tr2__DeleteOSDResponse, "-tr2:DeleteOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetMasks(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetMasks soap_tmp___tr2__GetMasks;
	_tr2__GetMasksResponse tr2__GetMasksResponse;
	tr2__GetMasksResponse.soap_default(soap);
	soap_default___tr2__GetMasks(soap, &soap_tmp___tr2__GetMasks);
	if (!soap_get___tr2__GetMasks(soap, &soap_tmp___tr2__GetMasks, "-tr2:GetMasks", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMasks(soap_tmp___tr2__GetMasks.tr2__GetMasks, tr2__GetMasksResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetMasksResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetMasksResponse.soap_put(soap, "tr2:GetMasksResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetMasksResponse.soap_put(soap, "tr2:GetMasksResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__GetMaskOptions(struct soap *soap, Media2BindingService *service)
{	struct __tr2__GetMaskOptions soap_tmp___tr2__GetMaskOptions;
	_tr2__GetMaskOptionsResponse tr2__GetMaskOptionsResponse;
	tr2__GetMaskOptionsResponse.soap_default(soap);
	soap_default___tr2__GetMaskOptions(soap, &soap_tmp___tr2__GetMaskOptions);
	if (!soap_get___tr2__GetMaskOptions(soap, &soap_tmp___tr2__GetMaskOptions, "-tr2:GetMaskOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMaskOptions(soap_tmp___tr2__GetMaskOptions.tr2__GetMaskOptions, tr2__GetMaskOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__GetMaskOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__GetMaskOptionsResponse.soap_put(soap, "tr2:GetMaskOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__GetMaskOptionsResponse.soap_put(soap, "tr2:GetMaskOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__SetMask(struct soap *soap, Media2BindingService *service)
{	struct __tr2__SetMask soap_tmp___tr2__SetMask;
	struct __tr2__SetMaskResponse soap_tmp___tr2__SetMaskResponse;
	soap_default___tr2__SetMaskResponse(soap, &soap_tmp___tr2__SetMaskResponse);
	soap_default___tr2__SetMask(soap, &soap_tmp___tr2__SetMask);
	if (!soap_get___tr2__SetMask(soap, &soap_tmp___tr2__SetMask, "-tr2:SetMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMask(soap_tmp___tr2__SetMask.tr2__SetMask, soap_tmp___tr2__SetMaskResponse.tr2__SetMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__SetMaskResponse(soap, &soap_tmp___tr2__SetMaskResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__SetMaskResponse(soap, &soap_tmp___tr2__SetMaskResponse, "-tr2:SetMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__SetMaskResponse(soap, &soap_tmp___tr2__SetMaskResponse, "-tr2:SetMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__CreateMask(struct soap *soap, Media2BindingService *service)
{	struct __tr2__CreateMask soap_tmp___tr2__CreateMask;
	_tr2__CreateMaskResponse tr2__CreateMaskResponse;
	tr2__CreateMaskResponse.soap_default(soap);
	soap_default___tr2__CreateMask(soap, &soap_tmp___tr2__CreateMask);
	if (!soap_get___tr2__CreateMask(soap, &soap_tmp___tr2__CreateMask, "-tr2:CreateMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateMask(soap_tmp___tr2__CreateMask.tr2__CreateMask, tr2__CreateMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	tr2__CreateMaskResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tr2__CreateMaskResponse.soap_put(soap, "tr2:CreateMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tr2__CreateMaskResponse.soap_put(soap, "tr2:CreateMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tr2__DeleteMask(struct soap *soap, Media2BindingService *service)
{	struct __tr2__DeleteMask soap_tmp___tr2__DeleteMask;
	struct __tr2__DeleteMaskResponse soap_tmp___tr2__DeleteMaskResponse;
	soap_default___tr2__DeleteMaskResponse(soap, &soap_tmp___tr2__DeleteMaskResponse);
	soap_default___tr2__DeleteMask(soap, &soap_tmp___tr2__DeleteMask);
	if (!soap_get___tr2__DeleteMask(soap, &soap_tmp___tr2__DeleteMask, "-tr2:DeleteMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteMask(soap_tmp___tr2__DeleteMask.tr2__DeleteMask, soap_tmp___tr2__DeleteMaskResponse.tr2__DeleteMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tr2__DeleteMaskResponse(soap, &soap_tmp___tr2__DeleteMaskResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tr2__DeleteMaskResponse(soap, &soap_tmp___tr2__DeleteMaskResponse, "-tr2:DeleteMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tr2__DeleteMaskResponse(soap, &soap_tmp___tr2__DeleteMaskResponse, "-tr2:DeleteMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
